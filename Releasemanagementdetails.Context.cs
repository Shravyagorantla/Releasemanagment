

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Releasemanagment
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class ReleasemanagamentdbEntities1 : DbContext
{
    public ReleasemanagamentdbEntities1()
        : base("name=ReleasemanagamentdbEntities1")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<Developer> Developers { get; set; }

    public virtual DbSet<Employee> Employees { get; set; }

    public virtual DbSet<Module> Modules { get; set; }

    public virtual DbSet<Project> Projects { get; set; }

    public virtual DbSet<table_login> table_login { get; set; }

    public virtual DbSet<TeamLead> TeamLeads { get; set; }

    public virtual DbSet<Tester> Testers { get; set; }


    public virtual int proc_add_project(Nullable<int> pid, string pname, string pstatus, string ptype)
    {

        var pidParameter = pid.HasValue ?
            new ObjectParameter("pid", pid) :
            new ObjectParameter("pid", typeof(int));


        var pnameParameter = pname != null ?
            new ObjectParameter("pname", pname) :
            new ObjectParameter("pname", typeof(string));


        var pstatusParameter = pstatus != null ?
            new ObjectParameter("pstatus", pstatus) :
            new ObjectParameter("pstatus", typeof(string));


        var ptypeParameter = ptype != null ?
            new ObjectParameter("ptype", ptype) :
            new ObjectParameter("ptype", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_add_project", pidParameter, pnameParameter, pstatusParameter, ptypeParameter);
    }


    public virtual ObjectResult<proc_CheckLogin_Result> proc_CheckLogin(string un, string upass)
    {

        var unParameter = un != null ?
            new ObjectParameter("un", un) :
            new ObjectParameter("un", typeof(string));


        var upassParameter = upass != null ?
            new ObjectParameter("upass", upass) :
            new ObjectParameter("upass", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_CheckLogin_Result>("proc_CheckLogin", unParameter, upassParameter);
    }


    public virtual int proc_InsertUser(string un, string upass, string urole)
    {

        var unParameter = un != null ?
            new ObjectParameter("un", un) :
            new ObjectParameter("un", typeof(string));


        var upassParameter = upass != null ?
            new ObjectParameter("upass", upass) :
            new ObjectParameter("upass", typeof(string));


        var uroleParameter = urole != null ?
            new ObjectParameter("urole", urole) :
            new ObjectParameter("urole", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_InsertUser", unParameter, upassParameter, uroleParameter);
    }


    public virtual int proc_Assign_Project(Nullable<int> pid, string pname, Nullable<int> teamLead_id, string teamLead_name)
    {

        var pidParameter = pid.HasValue ?
            new ObjectParameter("pid", pid) :
            new ObjectParameter("pid", typeof(int));


        var pnameParameter = pname != null ?
            new ObjectParameter("pname", pname) :
            new ObjectParameter("pname", typeof(string));


        var teamLead_idParameter = teamLead_id.HasValue ?
            new ObjectParameter("TeamLead_id", teamLead_id) :
            new ObjectParameter("TeamLead_id", typeof(int));


        var teamLead_nameParameter = teamLead_name != null ?
            new ObjectParameter("TeamLead_name", teamLead_name) :
            new ObjectParameter("TeamLead_name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Assign_Project", pidParameter, pnameParameter, teamLead_idParameter, teamLead_nameParameter);
    }


    public virtual int proc_add_employee(Nullable<int> empid, string emp_name, string emp_role)
    {

        var empidParameter = empid.HasValue ?
            new ObjectParameter("empid", empid) :
            new ObjectParameter("empid", typeof(int));


        var emp_nameParameter = emp_name != null ?
            new ObjectParameter("emp_name", emp_name) :
            new ObjectParameter("emp_name", typeof(string));


        var emp_roleParameter = emp_role != null ?
            new ObjectParameter("emp_role", emp_role) :
            new ObjectParameter("emp_role", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_add_employee", empidParameter, emp_nameParameter, emp_roleParameter);
    }

}

}

